---
title: "Map US cities imperviousness with GHCN stations"
author: "Eva Marques"
format: html
editor: visual
---

**Objective: plot stations from GHCN network in several US urban areas.**

```{r}
devtools::load_all()
```

Open US-wide imperviousness data

```{r}
imp_path <- paste0("../input/US_2019_imperviousness/",
                   "nlcd_2019_impervious_l48_20210604.img")
imp_us <- terra::rast(imp_path)
```

Create sf polygons for each city

```{r}
cities <- list("los_angeles" = data.frame("lon" = c(-119.44, -117.27), "lat" = c(32.84, 34.63)),
     "san_francisco"= data.frame("lon" = c(-122.91, -121.66), "lat" = c(36.77, 38.32)),
     "chicago"= data.frame("lon" = c(-88.70, -86.93), "lat" = c(41.24, 42.58)),
     "miami" = data.frame("lon" = c(-80.61, -79.85), "lat" = c(25.37, 26.62)),
     "new_york"= data.frame("lon" = c(-74.91, -72.48), "lat" = c(40.30, 41.34)),
     "washington"= data.frame("lon" = c(-77.63, -76.27), "lat" = c(38.54, 39.54)),
     "phoenix"= data.frame("lon" = c(-112.59, -111.56), "lat" = c(33.00, 34.01)),
     "rtp"= data.frame("lon" = c(-79.19, -78.39), "lat" = c(35.6, 36.11))
)

poly <- cities |> 
  lapply(FUN = function(x) {
    x <- x |>
      sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) |> 
      sf::st_bbox() |>
      sf::st_as_sfc()
    return(x)
  }
  )
```

Extract imperviousness for each city

```{r}
imp <- poly |> 
  lapply(FUN = function(x) {
    x_tr <- x |> sf::st_transform(crs = terra::crs(imp_us))
    imp <- terra::crop(imp_us, x_tr)
    return(imp)
  }
  )
```

Load GHCN sites for each city

```{r}
aws <- poly |>
  lapply(FUN = function(x) {
    y <- x |>
      sf::st_as_sf() |>
      find_ghcnh_polygon()
    return(y)
  })
```

Mapping function

```{r}
map_aws_imp <- function(data,
                        imp,
                        title) {
  ggplot() +
    tidyterra::geom_spatraster(data = imp) +
    geom_sf(
      data = data,
      aes(geometry = geometry),
      fill = "white",
      shape = 20,
      color = "white",
      size = 5,
    ) +
    scale_fill_gradientn(colours = c("black", "floralwhite", "lightpink", "deeppink1","darkorchid1"),
                         na.value = NA,
                         breaks = seq(0, 100, 10),
                         limits = c(0, 100)) +
    guides(fill = guide_legend(title = "Imperviousness (%)")) +
    labs(
      title = title
    ) +
    annotation_custom(grob = grid::rectGrob(
      x = unit(0, "cm"), 
      y = unit(1, "cm"),
      width = unit(6, "cm"),
      height = 3,
      vjust = 1,
      hjust = 0,
      gp = grid::gpar(col = NA)
      )
    ) +
    ggspatial::annotation_scale(
      location = "bl", pad_x = unit(0.5, "cm"),
      pad_y = unit(0.5, "cm"),
      height = unit(0.2, "cm"),
      text_cex = 1
    ) +
    ggspatial::annotation_north_arrow(
      location = "br",
      which_north = "true",
      height = unit(1, "cm"),
      width = unit(.7, "cm"),
      pad_x = unit(0.1, "cm"),
      pad_y = unit(0.1, "cm")
    ) +
    theme(
      axis.text = element_text(size = 12),
      plot.caption = element_text(size = 10),
      legend.text = element_text(size = 12),
      legend.title = element_text(size = 12),
      panel.background = element_rect(fill = "white"),
      panel.grid.major = element_line(colour = "grey")
    )
}

```

Map cities

```{r}
for (city in names(cities)) {
  map <- aws[[city]] |>
  sf::st_transform(crs = terra::crs(imp[[city]])) |>
  map_aws_imp(as.numeric(imp[[city]]), city)
  print(map)
  ggplot2::ggsave(filename = paste0("../graphs/map_imp_ghcn_sites_",
                                    city,
                                    ".png"),
                  plot = map,
                  width = 9,
                  height = 7,
                  dpi = 300)
}
```
